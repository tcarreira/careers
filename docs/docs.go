// GENERATED BY THE COMMAND ABOVE; DO NOT EDIT
// This file was generated by swaggo/swag at
// 2020-04-10 03:06:34.621439403 -0300 -03 m=+0.029174051

package docs

import (
	"bytes"
	"encoding/json"
	"strings"

	"github.com/alecthomas/template"
	"github.com/swaggo/swag"
)

var doc = `{
    "schemes": {{ marshal .Schemes }},
    "swagger": "2.0",
    "info": {
        "description": "{{.Description}}",
        "title": "{{.Title}}",
        "contact": {
            "name": "Tiago Carreira",
            "url": "https://github.com/tcarreira/superhero"
        },
        "license": {
            "name": "MIT License",
            "url": "https://raw.githubusercontent.com/tcarreira/superhero/master/LICENSE"
        },
        "version": "{{.Version}}"
    },
    "host": "{{.Host}}",
    "basePath": "{{.BasePath}}",
    "paths": {
        "/groups": {
            "post": {
                "description": "Create new Group of Supers",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "summary": "Create new Group of Supers",
                "parameters": [
                    {
                        "description": "Group definition. Supers is a list os their names",
                        "name": "super",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.Group"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Group was created",
                        "schema": {
                            "$ref": "#/definitions/models.Group"
                        }
                    },
                    "409": {
                        "description": "Group name already exists",
                        "schema": {
                            "$ref": "#/definitions/server.errorResponseJSON"
                        }
                    }
                }
            }
        },
        "/groups/{name}": {
            "get": {
                "description": "Get Group by name",
                "produces": [
                    "application/json"
                ],
                "summary": "Get Group",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Group Name",
                        "name": "name",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Group",
                        "schema": {
                            "$ref": "#/definitions/models.Group"
                        }
                    },
                    "404": {
                        "description": "Group Not Found",
                        "schema": {
                            "$ref": "#/definitions/server.errorResponseJSON"
                        }
                    },
                    "500": {
                        "description": "Unexpected Error",
                        "schema": {
                            "$ref": "#/definitions/server.errorResponseJSON"
                        }
                    }
                }
            }
        },
        "/super-hero": {
            "post": {
                "description": "Create new Super Hero by name",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "summary": "Create new Super Hero",
                "parameters": [
                    {
                        "description": "super hero name",
                        "name": "super",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/server.exampleSuperHeroVilanJSON"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Super was created",
                        "schema": {
                            "$ref": "#/definitions/models.Super"
                        }
                    },
                    "409": {
                        "description": "Super already exists",
                        "schema": {
                            "$ref": "#/definitions/server.errorResponseJSON"
                        }
                    }
                }
            }
        },
        "/super-vilan": {
            "post": {
                "description": "Create new Super Vilan by name",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "summary": "Create new Super Vilan",
                "parameters": [
                    {
                        "description": "super vilan name",
                        "name": "super",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/server.exampleSuperHeroVilanJSON"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Super was created",
                        "schema": {
                            "$ref": "#/definitions/models.Super"
                        }
                    },
                    "409": {
                        "description": "Super already exists",
                        "schema": {
                            "$ref": "#/definitions/server.errorResponseJSON"
                        }
                    }
                }
            }
        },
        "/supers": {
            "get": {
                "description": "Get list of Supers by filtering by name, uuid or type",
                "produces": [
                    "application/json"
                ],
                "summary": "Get list of Supers",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Super(hero/vilan) Name (case-sensitive)",
                        "name": "name",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Super(hero/vilan) UUID (case-insensitive)",
                        "name": "uuid",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Super(hero/vilan) Type (HERO / VILAN) (case-insensitive)",
                        "name": "type",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "List of Supers",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/models.Super"
                            }
                        }
                    },
                    "400": {
                        "description": "Error parsing payload",
                        "schema": {
                            "$ref": "#/definitions/server.errorResponseJSON"
                        }
                    }
                }
            },
            "post": {
                "description": "Create new Super",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "summary": "Create new Super (hero/vilan)",
                "parameters": [
                    {
                        "description": "super hero (mandatory: name and type)",
                        "name": "super",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/server.exampleSuperJSON"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Super was created",
                        "schema": {
                            "$ref": "#/definitions/models.Super"
                        }
                    },
                    "409": {
                        "description": "Super already exists",
                        "schema": {
                            "$ref": "#/definitions/server.errorResponseJSON"
                        }
                    }
                }
            }
        },
        "/supers/{id}": {
            "get": {
                "description": "Get a Super by name or uuid",
                "produces": [
                    "application/json"
                ],
                "summary": "Get Super",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Super's Name or UUID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Super",
                        "schema": {
                            "$ref": "#/definitions/models.Super"
                        }
                    },
                    "404": {
                        "description": "Super Not Found",
                        "schema": {
                            "$ref": "#/definitions/server.errorResponseJSON"
                        }
                    },
                    "500": {
                        "description": "Unexpected Error",
                        "schema": {
                            "$ref": "#/definitions/server.errorResponseJSON"
                        }
                    }
                }
            },
            "delete": {
                "description": "Delete a by name or uuid",
                "produces": [
                    "application/json"
                ],
                "summary": "Delete a Super",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Super's Name or UUID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "204": {
                        "description": "Successfully deleted"
                    },
                    "404": {
                        "description": "Super Not Found",
                        "schema": {
                            "$ref": "#/definitions/server.errorResponseJSON"
                        }
                    },
                    "500": {
                        "description": "Unexpected Error",
                        "schema": {
                            "$ref": "#/definitions/server.errorResponseJSON"
                        }
                    }
                }
            }
        }
    },
    "definitions": {
        "models.Group": {
            "type": "object",
            "properties": {
                "name": {
                    "type": "string"
                },
                "supers": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "tableName": {
                    "type": "object"
                }
            }
        },
        "models.Super": {
            "type": "object",
            "properties": {
                "fullname": {
                    "type": "string",
                    "example": "SuperHero1's Full Name"
                },
                "groups": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "example": [
                        "group1",
                        "group2"
                    ]
                },
                "image_url": {
                    "type": "string",
                    "example": "https://http.cat/200"
                },
                "intelligence": {
                    "type": "integer",
                    "example": 90
                },
                "name": {
                    "type": "string",
                    "example": "SuperHero1"
                },
                "occupation": {
                    "type": "string",
                    "example": "Programmer"
                },
                "power": {
                    "type": "integer",
                    "example": 80
                },
                "relatives_count": {
                    "type": "integer"
                },
                "type": {
                    "type": "string",
                    "enum": [
                        "HERO",
                        "VILAN"
                    ],
                    "example": "HERO"
                },
                "uuid": {
                    "type": "string",
                    "example": "47c0df01-a47d-497f-808d-181021f01c76"
                }
            }
        },
        "server.errorResponseJSON": {
            "type": "object",
            "properties": {
                "error": {
                    "type": "string"
                },
                "message": {
                    "type": "string"
                }
            }
        },
        "server.exampleSuperHeroVilanJSON": {
            "type": "object",
            "properties": {
                "name": {
                    "type": "string",
                    "example": "name1"
                }
            }
        },
        "server.exampleSuperJSON": {
            "type": "object",
            "properties": {
                "name": {
                    "type": "string",
                    "example": "name1"
                },
                "type": {
                    "type": "string",
                    "example": "HERO"
                }
            }
        }
    }
}`

type swaggerInfo struct {
	Version     string
	Host        string
	BasePath    string
	Schemes     []string
	Title       string
	Description string
}

// SwaggerInfo holds exported Swagger Info so clients can modify it
var SwaggerInfo = swaggerInfo{
	Version:     "1.0",
	Host:        "",
	BasePath:    "/api/v1",
	Schemes:     []string{},
	Title:       "Superhero API",
	Description: "SuperHero API - Go (inspired by superheroapi.com) \\n This is being made in the context of https://github.com/levpay/careers#desafio",
}

type s struct{}

func (s *s) ReadDoc() string {
	sInfo := SwaggerInfo
	sInfo.Description = strings.Replace(sInfo.Description, "\n", "\\n", -1)

	t, err := template.New("swagger_info").Funcs(template.FuncMap{
		"marshal": func(v interface{}) string {
			a, _ := json.Marshal(v)
			return string(a)
		},
	}).Parse(doc)
	if err != nil {
		return doc
	}

	var tpl bytes.Buffer
	if err := t.Execute(&tpl, sInfo); err != nil {
		return doc
	}

	return tpl.String()
}

func init() {
	swag.Register(swag.Name, &s{})
}
